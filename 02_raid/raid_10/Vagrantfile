# -*- mode: ruby -*-
# vim: set ft=ruby :

#home = ENV['HOME']
vb_path = `VBoxManage list systemproperties | grep "Default machine folder"`
vb_machine_folder = vb_path.split(':')[1].strip()

# current_time = DateTime.now
# datetime = current_time.strftime "%Y-%m-%d_%H-%M-%S"
# vb_name = "otus-linux_raid_" + datetime
vb_name = "otus-linux_raid_10"

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',

        # Get disk path


        :disks => {
		:sata1 => {
			:dfile => vb_machine_folder + '/' + vb_name + '/sata1.vdi',
			:size => 250, # Megabytes
			:port => 1
		},
		:sata2 => {
                        :dfile => vb_machine_folder + '/' + vb_name + '/sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
		},
                :sata3 => {
                        # :dfile => './sata3.vdi',
                        :dfile => vb_machine_folder + '/' + vb_name + '/sata3.vdi',
                        :size => 250,
                        :port => 3
                },
                :sata4 => {
                        :dfile => vb_machine_folder + '/' + vb_name + '/sata4.vdi',
                        :size => 250, # Megabytes
                        :port => 4
                },
                :sata5 => {
                        :dfile => vb_machine_folder + '/' + vb_name + '/sata5.vdi',
                        :size => 250, # Megabytes
                        :port => 5
                },
                :sata6 => {
                        :dfile => vb_machine_folder + '/' + vb_name + '/sata6.vdi',
                        :size => 250, # Megabytes
                        :port => 6
                }
	}

  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|

                  vb.name = vb_name
            	  vb.customize ["modifyvm", :id, "--memory", "4096"]
                  vb.customize ["modifyvm", :id, "--cpus", 2]

                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
      # config.vm.synced_folder ".", "/vagrant", disabled: true
      # config.vm.synced_folder "~/github/otus/otus-linux_raid/", "/home/vagrant/otus-linux_raid/"

 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
	      yum install -y mdadm smartmontools hdparm gdisk

              mdadm --zero-superblock --force /dev/sd{b,c,d,e,f,g}
              mdadm --create --verbose /dev/md0 -l 10 -n 6 /dev/sd{b,c,d,e,f,g}

              mkdir /etc/mdadm
              echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
              mdadm --detail --scan | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf

              parted -s /dev/md0 mklabel gpt
              parted /dev/md0 mkpart primary ext4 0% 20%
              parted /dev/md0 mkpart primary ext4 20% 40%
              parted /dev/md0 mkpart primary ext4 40% 60%
              parted /dev/md0 mkpart primary ext4 60% 80%
              parted /dev/md0 mkpart primary ext4 80% 100%

              for i in $(seq 1 5); do sudo mkfs.ext4 /dev/md0p$i; done
              mkdir -p /raid/part{1,2,3,4,5}
              for i in $(seq 1 5); do mount /dev/md0p$i /raid/part$i | echo "/dev/md0p$i /raid/part$i ext4 defaults 0 0" >> /etc/fstab ; done

   	  SHELL

      end
  end
end
